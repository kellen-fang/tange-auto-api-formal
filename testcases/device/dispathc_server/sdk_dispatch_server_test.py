# NOTE: Generated By HttpRunner v3.1.4
# FROM: testcases/device/dispathc_server/sdk_dispatch_server.yml


import pytest
from httprunner import Parameters


from httprunner import HttpRunner, Config, Step, RunRequest, RunTestCase


class TestCaseSdkDispatchServer(HttpRunner):
    @pytest.mark.parametrize(
        "param",
        Parameters(
            {
                "source-uuid-version-iccid": "${parameterize(test_data/normal_device_data.csv)}",
                "status_code-ok-status-code-reg-api-ai": [
                    [200, 1, "ok", 200, "/socket.io/", "http:", "http:"]
                ],
            }
        ),
    )
    def test_start(self, param):
        super().test_start(param)

    config = Config("设备调度服务").base_url("${ENV(ep_url)}")

    teststeps = [
        Step(
            RunRequest("调度服务")
            .post("service")
            .with_headers(**{"Content-Type": "application/json"})
            .with_json(
                {
                    "source": "$source",
                    "deviceid": "$uuid",
                    "imei": None,
                    "version": "$version",
                    "last": None,
                    "name": None,
                    "iccid": "$iccid",
                }
            )
            .validate()
            .assert_equal("status_code", "$status_code")
            .assert_equal("body.ok", "$ok")
            .assert_equal("body.status", "$status")
            .assert_equal("body.code", "$code")
            .assert_endswith("body.data.reg", "$reg")
            .assert_startswith("body.data.api", "$api")
            .assert_startswith("body.data.ai", "$ai")
        ),
    ]


if __name__ == "__main__":
    TestCaseSdkDispatchServer().test_start()
